# Server
PORT=5000
NODE_ENV=development

# Database
MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/dbname?retryWrites=true&w=majority

# Auth
JWT_SECRET=votre_super_secret_jwt
JWT_EXPIRES_IN=30d
GOOGLE_CLIENT_ID=votre_id_google
GOOGLE_CLIENT_SECRET=votre_secret_google
LINKEDIN_CLIENT_ID=votre_id_linkedin
LINKEDIN_CLIENT_SECRET=votre_secret_linkedin

# Cloudinary
CLOUDINARY_CLOUD_NAME=votre_cloud
CLOUDINARY_API_KEY=votre_api_key
CLOUDINARY_API_SECRET=votre_api_secret

# Stripe (pour extensions futures)
STRIPE_SECRET_KEY=sk_test_votre_cle_stripe


ecommerce-backend/
├── .env
├── .gitignore
├── package.json
├── server.js
└── src/
    ├── config/
    │   ├── db.js          # Connexion MongoDB
    │   ├── cloudinary.js  # Config upload images
    │   └── passport.js    # Stratégies OAuth
    │
    ├── controllers/
    │   ├── admin/
    │   │   ├── dashboard.controller.js
    │   │   ├── products.controller.js
    │   │   └── users.controller.js
    │   │
    │   ├── auth.controller.js
    │   ├── cart.controller.js
    │   ├── order.controller.js
    │   └── product.controller.js
    │
    ├── models/
    │   ├── Product.js
    │   ├── User.js
    │   ├── Order.js
    │   └── Cart.js
    │
    ├── routes/
    │   ├── admin.routes.js
    │   ├── auth.routes.js
    │   ├── cart.routes.js
    │   ├── order.routes.js
    │   └── product.routes.js
    │   └── user.routes.js
    │
    ├── middlewares/
    │   ├── auth.middleware.js
    │   ├── error.middleware.js
    │   └── upload.middleware.js
    │
    ├── services/
    │   ├── email.service.js
    │   ├── payment.service.js
    │   └── stats.service.js
    │
    ├── utils/
    │   ├── helpers.js
    │   ├── validators.js
    │   └── logger.js
    │
    ├── app.js
    └── server.js